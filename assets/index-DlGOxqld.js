var t=Object.defineProperty,__publicField=(e,s,o)=>((e,s,o)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[s]=o)(e,"symbol"!=typeof s?s+"":s,o);import{d as e,o as s,a as o,e as i,b as r}from"./index-CBIm98R_.js";function idToRgba(t){return t.split("-")}const n={};function createOnceId(){return Array(3).fill(0).map((()=>Math.ceil(255*Math.random()))).concat(255).join("-")}class Base{constructor(){__publicField(this,"listeners"),__publicField(this,"id"),this.id=function createId(){let t=createOnceId();for(;n[t];)t=createOnceId();return console.log(11111,t),t}(),this.listeners={}}draw(t,e){throw new Error("Method not implemented.")}on(t,e){this.listeners[t]?this.listeners[t].push(e):this.listeners[t]=[e]}getListeners(){return this.listeners}getId(){return this.id}}class Rect extends Base{constructor(t){super(),this.props=t,this.props.fillColor=this.props.fillColor||"#fff",this.props.strokeColor=this.props.strokeColor||"#000",this.props.strokeWidth=this.props.strokeWidth||1}draw(t,e){const{x:s,y:o,width:i,height:r,strokeColor:n,strokeWidth:a,fillColor:l}=this.props;t.save(),t.beginPath(),t.strokeStyle=n,t.lineWidth=a,t.fillStyle=l,t.rect(s,o,i,r),t.fill(),t.stroke(),t.restore();const[h,d,c,p]=idToRgba(this.id);e.save(),e.beginPath(),e.strokeStyle=`rgba(${h}, ${d}, ${c}, ${p})`,e.fillStyle=`rgba(${h}, ${d}, ${c}, ${p})`,e.rect(s,o,i,r),e.fill(),e.stroke(),e.restore()}}class Circle extends Base{constructor(t){super(),this.props=t,this.props.fillColor=this.props.fillColor||"#fff",this.props.strokeColor=this.props.strokeColor||"#000",this.props.strokeWidth=this.props.strokeWidth||1}draw(t,e){const{x:s,y:o,radius:i,strokeColor:r,strokeWidth:n,fillColor:a}=this.props;t.save(),t.beginPath(),t.fillStyle=a,t.strokeStyle=r,t.lineWidth=n,t.arc(s,o,i,0,2*Math.PI),t.fill(),t.stroke(),t.restore();const[l,h,d,c]=idToRgba(this.id);e.save(),e.beginPath(),e.fillStyle=`rgba(${l}, ${h}, ${d}, ${c})`,e.strokeStyle=`rgba(${l}, ${h}, ${d}, ${c})`,e.lineWidth=n,e.arc(s,o,i,0,2*Math.PI),e.fill(),e.stroke(),e.restore()}}var a=(t=>(t.click="click",t.mousedown="mousedown",t.mousemove="mousemove",t.mouseup="mouseup",t.mouseenter="mouseenter",t.mouseleave="mouseleave",t))(a||{}),l=(t=>(t.Down="DOWN",t.Up="Up",t.Move="MOVE",t))(l||{});class EventSimulator{constructor(){__publicField(this,"listenersMap",{}),__publicField(this,"lastDownId"),__publicField(this,"lastMoveId")}addAction(t,e){const{type:s,id:o}=t;"MOVE"===s&&this.fire(o,a.mousemove,e),"MOVE"!==s||this.lastMoveId&&this.lastMoveId===o||(this.fire(o,a.mouseenter,e),this.fire(this.lastMoveId,a.mouseleave,e)),"DOWN"===s&&this.fire(o,a.mousedown,e),"Up"===s&&this.fire(o,a.mouseup,e),"Up"===s&&this.lastDownId===o&&this.fire(o,a.click,e),"MOVE"===s?this.lastMoveId=t.id:"DOWN"===s&&(this.lastDownId=t.id)}addListeners(t,e){this.listenersMap[t]=e}fire(t,e,s){this.listenersMap[t]&&this.listenersMap[t][e]&&this.listenersMap[t][e].forEach((t=>{t(s)}))}}class Stage{constructor(t){__publicField(this,"canvas"),__publicField(this,"osCanvas"),__publicField(this,"ctx"),__publicField(this,"osCtx"),__publicField(this,"dpr"),__publicField(this,"shapes"),__publicField(this,"eventSimulator"),__publicField(this,"handleCreator",(t=>e=>{const s=e.offsetX,o=e.offsetY,i=this.hitJudge(s,o);this.eventSimulator.addAction({type:t,id:i},e)}));const e=window.devicePixelRatio;t.width=parseInt(t.style.width)*e,t.height=parseInt(t.style.height)*e,this.canvas=t,this.osCanvas=new OffscreenCanvas(t.width,t.height),this.ctx=this.canvas.getContext("2d"),this.osCtx=this.osCanvas.getContext("2d"),this.ctx.scale(e,e),this.osCtx.scale(e,e),this.dpr=e,this.canvas.addEventListener("mousedown",this.handleCreator(l.Down)),this.canvas.addEventListener("mouseup",this.handleCreator(l.Up)),this.canvas.addEventListener("mousemove",this.handleCreator(l.Move)),this.shapes=new Set,this.eventSimulator=new EventSimulator}add(t){const e=t.getId();this.eventSimulator.addListeners(e,t.getListeners()),this.shapes.add(e),t.draw(this.ctx,this.osCtx)}hitJudge(t,e){const s=function rgbaToId(t){return t.join("-")}(Array.from(this.osCtx.getImageData(t*this.dpr,e*this.dpr,1,1).data));return this.shapes.has(s)?s:void 0}}const h=[i("canvas",{id:"canvas",style:{width:"500px",height:"350px",border:"1px solid #000"}},null,-1)],d=e({__name:"index",setup:t=>(s((()=>{const t=document.querySelector("#canvas"),e=new Stage(t),s=new Rect({x:50,y:50,width:250,height:175,fillColor:"green"}),o=new Circle({x:200,y:200,radius:100,fillColor:"red"});s.on(a.mousedown,(()=>{console.log("rect mousedown")})),s.on(a.mouseup,(()=>{console.log("rect mouseup")})),s.on(a.mouseenter,(()=>{console.log("rect mouseenter")})),s.on(a.click,(()=>{console.log("rect click")})),o.on(a.click,(()=>{console.log("circle click!!")})),o.on(a.mouseleave,(()=>{console.log("circle mouseleave!")})),e.add(s),e.add(o)})),(t,e)=>(r(),o("div",null,h)))});export{d as default};
