function rotatePointByOrigin(t,a,n){const{x:s,y:r}=a,{x:c,y:e}=t;return{x:s+(c-s)*Math.cos(n)-(e-r)*Math.sin(n),y:r+(c-s)*Math.sin(n)+(e-r)*Math.cos(n)}}function get2linesAngle(t,a,n,s,r=1){const c=a.x-t.x,e=a.y-t.y,o=s.x-n.x,y=s.y-n.y,i=(c*o+e*y)/(Math.sqrt(c*c+e*e)*Math.sqrt(o*o+y*y)),x=Math.acos(i);if(1===r)return x;return 180*x/Math.PI}function calculateDistance(t,a){const n=a.x-t.x,s=a.y-t.y;return Math.sqrt(n*n+s*s)}function getArcParamsBy3Points(t,a,n,s=!1){const r=Math.sqrt(Math.pow(t.x-a.x,2)+Math.pow(t.y-a.y,2)),c=Math.atan2(a.y-t.y,a.x-t.x),e=Math.atan2(n.y-t.y,n.x-t.x);return[t.x,t.y,r,c,e,s]}export{getArcParamsBy3Points as a,calculateDistance as c,get2linesAngle as g,rotatePointByOrigin as r};
